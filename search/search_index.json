{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue","title":"Home"},{"location":"#bienvenue","text":"","title":"Bienvenue"},{"location":"adresseip/","text":"Adresse IP Pr\u00e9requis : Binaire <> D\u00e9cimal Base 10 : D\u00e9cimal : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 Base 2 : Binaire : 0, 1 Base 16 : Hexad\u00e9cimal : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F Base 10 Base 2 Base 16 0 0000 0 1 0001 1 2 0010 2 3 0011 3 4 0100 4 5 0101 5 6 0110 6 7 0111 7 8 1000 8 9 1001 9 10 1010 A 11 1011 B 12 1100 C 13 1101 D 14 1110 E 15 1111 F En base 10 : 10 3 10 2 10 1 10 0 1000 100 10 1 Le nombre 4321 peut \u00eatre d\u00e9compos\u00e9 : 4.10 3 + 3.10 2 + 2.10 1 + 1.10 0 4 1000 + 3 100 + 2 10 + 1 1 4321 Un nombre en d\u00e9cimal sera \u00e9crit avec l'indice 10 : 4321 10 En base 2 : 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 Le nombre 249 10 peut \u00eatre converti en bianire par soustraction successive : 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 On se pose la question est-ce que 128 (2 7 ) rentre dans 249 si faux : 0 si vrai : 1 et on soustrait 128 \u00e0 249 Ici c'est vrai on met 1 et on soustrait 128 \u00e0 249 soit 121 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 x On se pose la question est-ce que 64 (2 6 ) rentre dans 121 si faux : 0 si vrai : 1 et on soustrait 64 \u00e0 121 Ici c'est vrai on met 1 et on soustrait 64 \u00e0 121 soit 57 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 x On se pose la question est-ce que 32 (2 5 ) rentre dans 57 si faux : 0 si vrai : 1 et on soustrait 32 \u00e0 57 Ici c'est vrai on met 1 et on soustrait 32 \u00e0 57 soit 25 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 x On se pose la question est-ce que 16 (2 4 ) rentre dans 25 si faux : 0 si vrai : 1 et on soustrait 16 \u00e0 25 Ici c'est vrai on met 1 et on soustrait 16 \u00e0 25 soit 9 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 x On se pose la question est-ce que 8 (2 3 ) rentre dans 9 si faux : 0 si vrai : 1 et on soustrait 8 \u00e0 9 Ici c'est vrai on met 1 et on soustrait 8 \u00e0 9 soit 1 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 x On se pose la question est-ce que 4 (2 2 ) rentre dans 1 si faux : 0 si vrai : 1 et on soustrait 4 Ici c'est faux on met 0 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 0 x On se pose la question est-ce que 2 (2 1 ) rentre dans 1 si faux : 0 si vrai : 1 et on soustrait 2 Ici c'est faux on met 0 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 0 0 x On se pose la question est-ce que 1 (2 0 ) rentre dans 1 si faux : 0 si vrai : 1 et on soustrait 1 Ici c'est vrai on met 1 et on soustrait 1 \u00e0 1 soit 0 Puisque le reste = 0 notre conversion est finie 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 0 0 1 Le nombre 249 peut \u00eatre d\u00e9compos\u00e9 : 1.2 7 + 1.2 6 + 1.2 5 + 1.2 4 + 1.2 3 + 0.2 2 + 0.2 1 + 1.2 0 1x128 + 1x64 + 1x32 + 1x16 + 1x8 + 0x4 + 0x2 + 1x1 249 Un nombre en binaire sera \u00e9crit avec l'indice 2 : 1111 1001 2 = 249 10 Exercices d'entrainement question(\"What number is the letter A in the English alphabet?\", answer(\"8\"), answer(\"14\"), answer(\"1\", correct = TRUE), answer(\"23\") ) Adresse IPv4 Une adresse IPv4 est un nombre de 32 bits identifiant de mani\u00e8re unique une interface r\u00e9seau sur un syst\u00e8me. Une adresse IPv4 s'\u00e9crit sous forme de nombres d\u00e9cimaux, divis\u00e9s en quatre champs de 8 bits s\u00e9par\u00e9s par des points. Chaque champ de 8 bits repr\u00e9sente un octet de l'adresse IPv4. Cette forme de repr\u00e9sentation des octets d'une adresse IPv4 est appel\u00e9e format d\u00e9cimal avec points. La figure ci-dessous pr\u00e9sente les composants d'une adresse IPv4 172.16.50.56 . Pour calculer la partie r\u00e9seau et partie machine, une adresse IP \u00e0 besoin d'un masque de sous r\u00e9seau. Soit en d\u00e9cimal avec points : 255.255.0.0 Soit sous forme CIDR, pr\u00e9fixe de r\u00e9seau : /16 Plages d'adresses priv\u00e9s IPv4 10.0.0.0 - 10.255.255.255 172.16.0.0 - 172.31.255.255 192.168.0.0 - 192.168.255.255 Adresse IPv6 Une adresse IPv6 est longue de 128 bits et se compose de huit champs de 16 bits, chacun \u00e9tant d\u00e9limit\u00e9 par deux-points (:). Chaque champ doit contenir un nombre hexad\u00e9cimal, \u00e0 la diff\u00e9rence de la notation en format d\u00e9cimal avec points des adresses IPv4. Format d'adresse IPv6 de base Calcul de l'adresse r\u00e9seau IPv4 Exemple : Nous cherchons l\u2019adresse r\u00e9seau de cette adresse IP : 10.5.100.16 / 20 Etape 1 : On \u00e9crit le masque en d\u00e9cimal point\u00e9 /20 = en binaire 1111 1111 . 1111 1111 . 1111 0000 . 0000 0000 soit 255.255.240.0 Etape 2 : On r\u00e9alise l\u2019op\u00e9ration ET bit \u00e0 bit entre l\u2019adresse r\u00e9seau et le masque, o\u00f9 le masque est diff\u00e9rent de 0 ou 255. Si 0, le r\u00e9sultat = 0 Si 255, le r\u00e9sultat = le nombre de l\u2019adresse r\u00e9seau Si autre op\u00e9ration ET bit \u00e0 bit Addresse IP 10 5 100 100 Adresse IP en binaire ... ... 0110 0100 ... Masque en d\u00e9cimal 255 255 240 0 Masque en bianire 1111 1111 1111 1111 1111 0000 0000 0000 Adresse r\u00e9seau en binaire ... ... 0110 0000 ... Adresse r\u00e9seau en d\u00e9cimale 10 5 96 0 Binaire D\u00e9cimal 1111 1111 255 1111 1110 254 1111 1100 252 1111 1000 248 1111 0000 240 1110 0000 224 1100 0000 192 1000 0000 128 Calcul du nombre d'adresse disponible sur le r\u00e9seau Nombre de machine sur notre r\u00e9seau : 2 (Nombre \u201c1\u201d dans le masque invers\u00e9) - 2 0.0.15.255 = 00000000.00000000.00001111.11111111 soit 12 \u201c1\u201d 212 - 2 soit 4094 machines ou 2 (32 - pr\u00e9fixe) - 2 32 - pr\u00e9fixe = 32 \u2013 20 = 12 212 - 2 soit 4094 machines Calcul des adresses utiles sur le r\u00e9seau Adresse R\u00e9seau = Adresse IP && Masque 1er Adresse = Adresse R\u00e9seau + 1 Masque invers\u00e9 = M\u0303 = 255.255.255.255 - Masque Adresse de diffusion = Adresse R\u00e9seau + Masque invers\u00e9 Derni\u00e8re Adresse = Adresse de Diffusion \u2013 1 Exemple Nous avons l'adresse IP : 192.168.4.201 / 27 Calcul du masque r\u00e9seau /27 = 1111 1111 . 1111 1111 . 1111 1111 . 1110 0000 = 255.255.255.224 Calcul de l'adresse r\u00e9seau IP 10 192 168 4 201 Masque 10 255 255 255 224 IP 2 ... ... ... 1100 1001 Masque 2 ... ... ... 1110 0000 R\u00e9seau 2 ... ... ... 1100 0000 R\u00e9seau 10 192 168 4 192 Adresse r\u00e9seau : 192.168.4.192 Calcul de la 1ere adresse attribuable 1ere adresse attribuable = Adresse r\u00e9seau + 1 1ere adresse attribuable = 192.168.4.193 Calcul du masque invers\u00e9 Masque invers\u00e9 = M\u0303 = 255.255.255.255 - Masque Masque invers\u00e9 = M\u0303 = 255-255 . 255-255 . 255-255 . 255-224 Masque invers\u00e9 = M\u0303 = 0 . 0 . 0 . 31 Calcul de l'adresse de diffusion Adresse de diffusion = Adresse R\u00e9seau + Masque invers\u00e9 Adresse de diffusion = 192.168.4.192 + 0.0.0.31 Adresse de diffusion = 192.168.4.223 Calcul de la derni\u00e8re adresse attribuable Derni\u00e8re Adresse = Adresse de Diffusion \u2013 1 Derni\u00e8re Adresse = 192.168.4.223 - 1 Derni\u00e8re Adresse = 192.168.4.222","title":"Adresse IP"},{"location":"adresseip/#adresse-ip","text":"","title":"Adresse IP"},{"location":"adresseip/#prerequis-binaire-decimal","text":"Base 10 : D\u00e9cimal : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 Base 2 : Binaire : 0, 1 Base 16 : Hexad\u00e9cimal : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F Base 10 Base 2 Base 16 0 0000 0 1 0001 1 2 0010 2 3 0011 3 4 0100 4 5 0101 5 6 0110 6 7 0111 7 8 1000 8 9 1001 9 10 1010 A 11 1011 B 12 1100 C 13 1101 D 14 1110 E 15 1111 F","title":"Pr\u00e9requis : Binaire &lt;&gt; D\u00e9cimal"},{"location":"adresseip/#en-base-10","text":"10 3 10 2 10 1 10 0 1000 100 10 1 Le nombre 4321 peut \u00eatre d\u00e9compos\u00e9 : 4.10 3 + 3.10 2 + 2.10 1 + 1.10 0 4 1000 + 3 100 + 2 10 + 1 1 4321 Un nombre en d\u00e9cimal sera \u00e9crit avec l'indice 10 : 4321 10","title":"En base 10 :"},{"location":"adresseip/#en-base-2","text":"2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 Le nombre 249 10 peut \u00eatre converti en bianire par soustraction successive : 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 On se pose la question est-ce que 128 (2 7 ) rentre dans 249 si faux : 0 si vrai : 1 et on soustrait 128 \u00e0 249 Ici c'est vrai on met 1 et on soustrait 128 \u00e0 249 soit 121 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 x On se pose la question est-ce que 64 (2 6 ) rentre dans 121 si faux : 0 si vrai : 1 et on soustrait 64 \u00e0 121 Ici c'est vrai on met 1 et on soustrait 64 \u00e0 121 soit 57 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 x On se pose la question est-ce que 32 (2 5 ) rentre dans 57 si faux : 0 si vrai : 1 et on soustrait 32 \u00e0 57 Ici c'est vrai on met 1 et on soustrait 32 \u00e0 57 soit 25 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 x On se pose la question est-ce que 16 (2 4 ) rentre dans 25 si faux : 0 si vrai : 1 et on soustrait 16 \u00e0 25 Ici c'est vrai on met 1 et on soustrait 16 \u00e0 25 soit 9 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 x On se pose la question est-ce que 8 (2 3 ) rentre dans 9 si faux : 0 si vrai : 1 et on soustrait 8 \u00e0 9 Ici c'est vrai on met 1 et on soustrait 8 \u00e0 9 soit 1 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 x On se pose la question est-ce que 4 (2 2 ) rentre dans 1 si faux : 0 si vrai : 1 et on soustrait 4 Ici c'est faux on met 0 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 0 x On se pose la question est-ce que 2 (2 1 ) rentre dans 1 si faux : 0 si vrai : 1 et on soustrait 2 Ici c'est faux on met 0 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 0 0 x On se pose la question est-ce que 1 (2 0 ) rentre dans 1 si faux : 0 si vrai : 1 et on soustrait 1 Ici c'est vrai on met 1 et on soustrait 1 \u00e0 1 soit 0 Puisque le reste = 0 notre conversion est finie 2 7 2 6 2 5 2 4 2 3 2 2 2 1 2 0 128 64 32 16 8 4 2 1 249 10 1 1 1 1 1 0 0 1 Le nombre 249 peut \u00eatre d\u00e9compos\u00e9 : 1.2 7 + 1.2 6 + 1.2 5 + 1.2 4 + 1.2 3 + 0.2 2 + 0.2 1 + 1.2 0 1x128 + 1x64 + 1x32 + 1x16 + 1x8 + 0x4 + 0x2 + 1x1 249 Un nombre en binaire sera \u00e9crit avec l'indice 2 : 1111 1001 2 = 249 10","title":"En base 2 :"},{"location":"adresseip/#exercices-dentrainement","text":"question(\"What number is the letter A in the English alphabet?\", answer(\"8\"), answer(\"14\"), answer(\"1\", correct = TRUE), answer(\"23\") )","title":"Exercices d'entrainement"},{"location":"adresseip/#adresse-ipv4","text":"Une adresse IPv4 est un nombre de 32 bits identifiant de mani\u00e8re unique une interface r\u00e9seau sur un syst\u00e8me. Une adresse IPv4 s'\u00e9crit sous forme de nombres d\u00e9cimaux, divis\u00e9s en quatre champs de 8 bits s\u00e9par\u00e9s par des points. Chaque champ de 8 bits repr\u00e9sente un octet de l'adresse IPv4. Cette forme de repr\u00e9sentation des octets d'une adresse IPv4 est appel\u00e9e format d\u00e9cimal avec points. La figure ci-dessous pr\u00e9sente les composants d'une adresse IPv4 172.16.50.56 . Pour calculer la partie r\u00e9seau et partie machine, une adresse IP \u00e0 besoin d'un masque de sous r\u00e9seau. Soit en d\u00e9cimal avec points : 255.255.0.0 Soit sous forme CIDR, pr\u00e9fixe de r\u00e9seau : /16","title":"Adresse IPv4"},{"location":"adresseip/#plages-dadresses-prives-ipv4","text":"10.0.0.0 - 10.255.255.255 172.16.0.0 - 172.31.255.255 192.168.0.0 - 192.168.255.255","title":"Plages d'adresses priv\u00e9s IPv4"},{"location":"adresseip/#adresse-ipv6","text":"Une adresse IPv6 est longue de 128 bits et se compose de huit champs de 16 bits, chacun \u00e9tant d\u00e9limit\u00e9 par deux-points (:). Chaque champ doit contenir un nombre hexad\u00e9cimal, \u00e0 la diff\u00e9rence de la notation en format d\u00e9cimal avec points des adresses IPv4. Format d'adresse IPv6 de base","title":"Adresse IPv6"},{"location":"adresseip/#calcul-de-ladresse-reseau-ipv4","text":"Exemple : Nous cherchons l\u2019adresse r\u00e9seau de cette adresse IP : 10.5.100.16 / 20 Etape 1 : On \u00e9crit le masque en d\u00e9cimal point\u00e9 /20 = en binaire 1111 1111 . 1111 1111 . 1111 0000 . 0000 0000 soit 255.255.240.0 Etape 2 : On r\u00e9alise l\u2019op\u00e9ration ET bit \u00e0 bit entre l\u2019adresse r\u00e9seau et le masque, o\u00f9 le masque est diff\u00e9rent de 0 ou 255. Si 0, le r\u00e9sultat = 0 Si 255, le r\u00e9sultat = le nombre de l\u2019adresse r\u00e9seau Si autre op\u00e9ration ET bit \u00e0 bit Addresse IP 10 5 100 100 Adresse IP en binaire ... ... 0110 0100 ... Masque en d\u00e9cimal 255 255 240 0 Masque en bianire 1111 1111 1111 1111 1111 0000 0000 0000 Adresse r\u00e9seau en binaire ... ... 0110 0000 ... Adresse r\u00e9seau en d\u00e9cimale 10 5 96 0 Binaire D\u00e9cimal 1111 1111 255 1111 1110 254 1111 1100 252 1111 1000 248 1111 0000 240 1110 0000 224 1100 0000 192 1000 0000 128","title":"Calcul de l'adresse r\u00e9seau IPv4"},{"location":"adresseip/#calcul-du-nombre-dadresse-disponible-sur-le-reseau","text":"Nombre de machine sur notre r\u00e9seau : 2 (Nombre \u201c1\u201d dans le masque invers\u00e9) - 2 0.0.15.255 = 00000000.00000000.00001111.11111111 soit 12 \u201c1\u201d 212 - 2 soit 4094 machines ou 2 (32 - pr\u00e9fixe) - 2 32 - pr\u00e9fixe = 32 \u2013 20 = 12 212 - 2 soit 4094 machines","title":"Calcul du nombre d'adresse disponible sur le r\u00e9seau"},{"location":"adresseip/#calcul-des-adresses-utiles-sur-le-reseau","text":"Adresse R\u00e9seau = Adresse IP && Masque 1er Adresse = Adresse R\u00e9seau + 1 Masque invers\u00e9 = M\u0303 = 255.255.255.255 - Masque Adresse de diffusion = Adresse R\u00e9seau + Masque invers\u00e9 Derni\u00e8re Adresse = Adresse de Diffusion \u2013 1 Exemple Nous avons l'adresse IP : 192.168.4.201 / 27","title":"Calcul des adresses utiles sur le r\u00e9seau"},{"location":"adresseip/#calcul-du-masque-reseau","text":"/27 = 1111 1111 . 1111 1111 . 1111 1111 . 1110 0000 = 255.255.255.224","title":"Calcul du masque r\u00e9seau"},{"location":"adresseip/#calcul-de-ladresse-reseau","text":"IP 10 192 168 4 201 Masque 10 255 255 255 224 IP 2 ... ... ... 1100 1001 Masque 2 ... ... ... 1110 0000 R\u00e9seau 2 ... ... ... 1100 0000 R\u00e9seau 10 192 168 4 192 Adresse r\u00e9seau : 192.168.4.192","title":"Calcul de l'adresse r\u00e9seau"},{"location":"adresseip/#calcul-de-la-1ere-adresse-attribuable","text":"1ere adresse attribuable = Adresse r\u00e9seau + 1 1ere adresse attribuable = 192.168.4.193","title":"Calcul de la 1ere adresse attribuable"},{"location":"adresseip/#calcul-du-masque-inverse","text":"Masque invers\u00e9 = M\u0303 = 255.255.255.255 - Masque Masque invers\u00e9 = M\u0303 = 255-255 . 255-255 . 255-255 . 255-224 Masque invers\u00e9 = M\u0303 = 0 . 0 . 0 . 31","title":"Calcul du masque invers\u00e9"},{"location":"adresseip/#calcul-de-ladresse-de-diffusion","text":"Adresse de diffusion = Adresse R\u00e9seau + Masque invers\u00e9 Adresse de diffusion = 192.168.4.192 + 0.0.0.31 Adresse de diffusion = 192.168.4.223","title":"Calcul de l'adresse de diffusion"},{"location":"adresseip/#calcul-de-la-derniere-adresse-attribuable","text":"Derni\u00e8re Adresse = Adresse de Diffusion \u2013 1 Derni\u00e8re Adresse = 192.168.4.223 - 1 Derni\u00e8re Adresse = 192.168.4.222","title":"Calcul de la derni\u00e8re adresse attribuable"},{"location":"arduino/","text":"Carte Arduino Arduino UNO R3 La carte Arduino Uno est bas\u00e9e sur un ATMega328 cadenc\u00e9 \u00e0 16 MHz. C'est la plus simple et la plus \u00e9conomique carte \u00e0 microcontr\u00f4leur d'Arduino. Des connecteurs situ\u00e9s sur les bords ext\u00e9rieurs du circuit imprim\u00e9 permettent d'enficher une s\u00e9rie de modules compl\u00e9mentaires. Interfaces : - 14 broches d'E/S dont 6 PWM - 6 entr\u00e9es analogiques 10 bits - Intensit\u00e9 par E/S: 40 mA Arduino Nano La carte Arduino Nano est bas\u00e9e sur un ATMega328 cadenc\u00e9 \u00e0 16 MHz. Sa m\u00e9moire de 32 kB et son grand nombre d'E/S font de ce circuit compatible DIL30 un \u00e9l\u00e9ment id\u00e9al pour les syst\u00e8mes embarqu\u00e9s ou pour des applications robotiques n\u00e9cessitant du multit\u00e2ches. Interfaces : - 14 broches d'E/S dont 6 PWM - 8 entr\u00e9es analogiques 10 bits - bus s\u00e9rie, I2C et SPI","title":"Arduino"},{"location":"arduino/#carte-arduino","text":"","title":"Carte Arduino"},{"location":"arduino/#arduino-uno-r3","text":"La carte Arduino Uno est bas\u00e9e sur un ATMega328 cadenc\u00e9 \u00e0 16 MHz. C'est la plus simple et la plus \u00e9conomique carte \u00e0 microcontr\u00f4leur d'Arduino. Des connecteurs situ\u00e9s sur les bords ext\u00e9rieurs du circuit imprim\u00e9 permettent d'enficher une s\u00e9rie de modules compl\u00e9mentaires. Interfaces : - 14 broches d'E/S dont 6 PWM - 6 entr\u00e9es analogiques 10 bits - Intensit\u00e9 par E/S: 40 mA","title":"Arduino UNO R3"},{"location":"arduino/#arduino-nano","text":"La carte Arduino Nano est bas\u00e9e sur un ATMega328 cadenc\u00e9 \u00e0 16 MHz. Sa m\u00e9moire de 32 kB et son grand nombre d'E/S font de ce circuit compatible DIL30 un \u00e9l\u00e9ment id\u00e9al pour les syst\u00e8mes embarqu\u00e9s ou pour des applications robotiques n\u00e9cessitant du multit\u00e2ches. Interfaces : - 14 broches d'E/S dont 6 PWM - 8 entr\u00e9es analogiques 10 bits - bus s\u00e9rie, I2C et SPI","title":"Arduino Nano"},{"location":"esp/","text":"Carte ESP32 ou ESP8266 Carte ESP32 Dans le logiciel, Arduino IDE, le Menu : File puis Preferences -> Additional boards manager URLs: Ajouter cette URL : https://espressif.github.io/arduino-esp32/package_esp32_index.json Dans le Board Manager, Installer : \"esp32 by Espressif Systems\" Carte Espressif ESP32-WROOM-32E Carte DFRobot FireBeetle ESP32-WROOM-32 Carte ESP8266 Dans le logiciel, Arduino IDE, le Menu : File puis Preferences -> Additional boards manager URLs: Ajouter cette URL : http://arduino.esp8266.com/stable/package_esp8266com_index.json Dans le Board Manager, Installer : \"esp8266 by ESP8266 Community\" Carte DFRobot FireBeetle ESP8266","title":"ESP32/ESP8622"},{"location":"esp/#carte-esp32-ou-esp8266","text":"","title":"Carte ESP32 ou ESP8266"},{"location":"esp/#carte-esp32","text":"Dans le logiciel, Arduino IDE, le Menu : File puis Preferences -> Additional boards manager URLs: Ajouter cette URL : https://espressif.github.io/arduino-esp32/package_esp32_index.json Dans le Board Manager, Installer : \"esp32 by Espressif Systems\"","title":"Carte ESP32"},{"location":"esp/#carte-espressif-esp32-wroom-32e","text":"","title":"Carte Espressif ESP32-WROOM-32E"},{"location":"esp/#carte-dfrobot-firebeetle-esp32-wroom-32","text":"","title":"Carte DFRobot FireBeetle ESP32-WROOM-32"},{"location":"esp/#carte-esp8266","text":"Dans le logiciel, Arduino IDE, le Menu : File puis Preferences -> Additional boards manager URLs: Ajouter cette URL : http://arduino.esp8266.com/stable/package_esp8266com_index.json Dans le Board Manager, Installer : \"esp8266 by ESP8266 Community\"","title":"Carte ESP8266"},{"location":"esp/#carte-dfrobot-firebeetle-esp8266","text":"","title":"Carte DFRobot FireBeetle ESP8266"},{"location":"euro/","text":"Mora avidum natos Radiis et traxit mersis amarunt pomum non Lorem markdownum Meleagros posset , deus cladis omnes gentes utque Trinacriam primo; labens spes habent dentibus. Pericula resedit miseratus eripe tacti addidit. Quem habent tamen nocens et usus se tendentem citius ferendae Panopeusque apertum quaesistis munus amplectitur fugio, lauro, habitanda. Me stant ; altum solus crines multi isset manusque subducere! Silvas promittit movere Capillos currendo corpus prius popularia volucres annis Dona firmo Coquiturque renovare dolores et genetrix ignibus menti Trementi cernentem ossa Puer equis ait at magos lacrimabile adfata Exsultat ictus alimentaque iste; nec arentis ferendum. Nec vocesque, labor haec, si rogata Iamque dictis constitit dixisse parentem domum turbam. Ales quid pertimuit frementes virgo tutaeque: plumis ubi haustus vicinia responsaque seductus respice! Amara murmure dentibus. ddrWhitelist += wavelengthLosslessModule.html.jfs_pretest(pup_reader_shift, snippet + market + surgeMemory.vpi_apple_scroll.nodeWi(macNicFile, menuMargin, icann_party)); acl.zoneDelete = fullCharacter.volumeJfs(rj_function_utf + -1); matrix_desktop_lte.dslam(fpu_bankruptcy_task); edi_bit = nui + lunPebibyte; tiffDocking(card(5, mail, 10) * gbps_expansion + compile_only, map_sms.token(name_baseband_uml, openFlaming - zettabyteCloud), 572593 + interface_non_digitize + throughputStorage); Solis limina per possit procul si littera Tenebant in ostentare nunc . Non cedere lenta pectoribus, auro vina sedilia sibila; hac? Arcumque edam dedit Rhodanumque formaque foret. Per parte variari Hector terribilem vota , te potentia adsuetaque nata, Idaque. Sensit et nunc Mihi exul proles massae nepos bracchia amores Crede mota regis sentit Saevae est erat fecissem lumina cultros hortus quam ilice pro relinquam! Huc deducat carpitur miscent anima responsa solutis concita; gemitus populus requiro viribus nitidis crinibus, in numquam turba! Saepe sol, Oeten rubet agitabitur huius, opus intra forte. Per umeros, caducas melior Echinadas ictus sternentem ferax; quercus neque exit levat, fama magnique mutavit. Totoque dolentis destinat felix nullus facinusque primoque. Parentis mox natus testantur gravitate sinamus depressitque somno. Qui tua saecula, comites pelagi Cinyran, est huc ? Nunc relicto conpleat loquor servire, nondum et.","title":"Section Euro"},{"location":"euro/#mora-avidum-natos","text":"","title":"Mora avidum natos"},{"location":"euro/#radiis-et-traxit-mersis-amarunt-pomum-non","text":"Lorem markdownum Meleagros posset , deus cladis omnes gentes utque Trinacriam primo; labens spes habent dentibus. Pericula resedit miseratus eripe tacti addidit. Quem habent tamen nocens et usus se tendentem citius ferendae Panopeusque apertum quaesistis munus amplectitur fugio, lauro, habitanda. Me stant ; altum solus crines multi isset manusque subducere! Silvas promittit movere Capillos currendo corpus prius popularia volucres annis Dona firmo Coquiturque renovare dolores et genetrix ignibus menti Trementi cernentem ossa Puer equis ait at magos lacrimabile adfata Exsultat ictus alimentaque iste; nec arentis ferendum. Nec vocesque, labor haec, si rogata Iamque dictis constitit dixisse parentem domum turbam. Ales quid pertimuit frementes virgo tutaeque: plumis ubi haustus vicinia responsaque seductus respice! Amara murmure dentibus. ddrWhitelist += wavelengthLosslessModule.html.jfs_pretest(pup_reader_shift, snippet + market + surgeMemory.vpi_apple_scroll.nodeWi(macNicFile, menuMargin, icann_party)); acl.zoneDelete = fullCharacter.volumeJfs(rj_function_utf + -1); matrix_desktop_lte.dslam(fpu_bankruptcy_task); edi_bit = nui + lunPebibyte; tiffDocking(card(5, mail, 10) * gbps_expansion + compile_only, map_sms.token(name_baseband_uml, openFlaming - zettabyteCloud), 572593 + interface_non_digitize + throughputStorage);","title":"Radiis et traxit mersis amarunt pomum non"},{"location":"euro/#solis-limina-per-possit-procul-si-littera","text":"Tenebant in ostentare nunc . Non cedere lenta pectoribus, auro vina sedilia sibila; hac? Arcumque edam dedit Rhodanumque formaque foret. Per parte variari Hector terribilem vota , te potentia adsuetaque nata, Idaque. Sensit et nunc Mihi exul proles massae nepos bracchia amores Crede mota regis sentit Saevae est erat fecissem lumina cultros hortus quam ilice pro relinquam! Huc deducat carpitur miscent anima responsa solutis concita; gemitus populus requiro viribus nitidis crinibus, in numquam turba! Saepe sol, Oeten rubet agitabitur huius, opus intra forte. Per umeros, caducas melior Echinadas ictus sternentem ferax; quercus neque exit levat, fama magnique mutavit. Totoque dolentis destinat felix nullus facinusque primoque. Parentis mox natus testantur gravitate sinamus depressitque somno. Qui tua saecula, comites pelagi Cinyran, est huc ? Nunc relicto conpleat loquor servire, nondum et.","title":"Solis limina per possit procul si littera"},{"location":"infranetwork/","text":"Configuration d'un r\u00e9seau Routeur, Switch, VLAN, VLSM, ACL Dossiers ressources utiles : \\polonium\\Ressources\\ (id : ciel , mdp : ciel) : Cisco","title":"Infrastructure R\u00e9seau"},{"location":"infranetwork/#configuration-dun-reseau-routeur-switch-vlan-vlsm-acl","text":"Dossiers ressources utiles : \\polonium\\Ressources\\ (id : ciel , mdp : ciel) : Cisco","title":"Configuration d'un r\u00e9seau Routeur, Switch, VLAN, VLSM, ACL"},{"location":"linux/","text":"Commande Linux Rappel commande Unix/Linux/BSD pwd (Imprime le r\u00e9pertoire de travail) $ pwd /etc/network cat fichier (Imprime le contenu des fichiers) $cat journal.txt cp dossier_source/fichier dossier_dest/ (Copie les fichiers et les r\u00e9pertoires) $ cp journal.txt /home/alice/ $ cp journal.txt /home/alice/blabla.txt mv dossier_source/fichier dossier_dest/ (D\u00e9place et renomme les fichiers et les r\u00e9pertoires) rm (Retire les fichiers et les r\u00e9pertoires) rm -rf (r pour les sous dossiers et f pour forcer) touch fichier (Cr\u00e9e des fichiers vides) mkdir (Cr\u00e9e des r\u00e9pertoires) ls (Liste le contnenu d'un r\u00e9pertoires) - ls -l : informations d\u00e9taill\u00e9es find -name ... (Recherche un fichier) tar -xvf fichier.tar.gz Pour ex\u00e9cuter un fichier : ./fichier nano fichier (Cr\u00e9e/Modifie un fichier) - Control + o : Sauvegarder - Control + x : Quitter Test avec un escape game Pour d\u00e9marrer le jeu : Sauvegarder l'archive compress\u00e9e (clique sur l'image) du jeu sur votre PC (cliquer-droit et enregistrer la cible...). Charger cette archive compress\u00e9e dans l'\u00e9mulateur en cliquant sur le bouton upload. D\u00e9compresser l'archive en tapant la commande : tar -xvzf escape_game-weblinux.tar.gz Commencer le jeu en entrant dans le r\u00e9pertoire escape_game : cd escape_game nano README.txt Quelques conseils : Lire le fichier README.txt lorsqu'il y en a un dans le r\u00e9pertoire courant. Pour lancer un ex\u00e9cutable monprogramme qui se trouve dans le r\u00e9pertoire courant, taper: ./monprogramme Acc\u00e9s au simulateur linux https://moocbash.univ-reunion.fr/?cpu=asm&n=1 Solutions Click me Aide \u00e9nigme 1 : ??? 9F Aide \u00e9nigme 2 : ??? B7 Aide \u00e9nigme 3 : ??? 72 Aide \u00e9nigme 4 : ??? A9 Aide \u00e9nigme 5 : ??? E7 Aide \u00e9nigme 6 : ??? C3","title":"Linux"},{"location":"linux/#commande-linux","text":"","title":"Commande Linux"},{"location":"linux/#rappel-commande-unixlinuxbsd","text":"pwd (Imprime le r\u00e9pertoire de travail) $ pwd /etc/network cat fichier (Imprime le contenu des fichiers) $cat journal.txt cp dossier_source/fichier dossier_dest/ (Copie les fichiers et les r\u00e9pertoires) $ cp journal.txt /home/alice/ $ cp journal.txt /home/alice/blabla.txt mv dossier_source/fichier dossier_dest/ (D\u00e9place et renomme les fichiers et les r\u00e9pertoires) rm (Retire les fichiers et les r\u00e9pertoires) rm -rf (r pour les sous dossiers et f pour forcer) touch fichier (Cr\u00e9e des fichiers vides) mkdir (Cr\u00e9e des r\u00e9pertoires) ls (Liste le contnenu d'un r\u00e9pertoires) - ls -l : informations d\u00e9taill\u00e9es find -name ... (Recherche un fichier) tar -xvf fichier.tar.gz Pour ex\u00e9cuter un fichier : ./fichier nano fichier (Cr\u00e9e/Modifie un fichier) - Control + o : Sauvegarder - Control + x : Quitter","title":"Rappel commande Unix/Linux/BSD"},{"location":"linux/#test-avec-un-escape-game","text":"Pour d\u00e9marrer le jeu : Sauvegarder l'archive compress\u00e9e (clique sur l'image) du jeu sur votre PC (cliquer-droit et enregistrer la cible...). Charger cette archive compress\u00e9e dans l'\u00e9mulateur en cliquant sur le bouton upload. D\u00e9compresser l'archive en tapant la commande : tar -xvzf escape_game-weblinux.tar.gz Commencer le jeu en entrant dans le r\u00e9pertoire escape_game : cd escape_game nano README.txt Quelques conseils : Lire le fichier README.txt lorsqu'il y en a un dans le r\u00e9pertoire courant. Pour lancer un ex\u00e9cutable monprogramme qui se trouve dans le r\u00e9pertoire courant, taper: ./monprogramme","title":"Test avec un escape game"},{"location":"linux/#acces-au-simulateur-linux","text":"https://moocbash.univ-reunion.fr/?cpu=asm&n=1","title":"Acc\u00e9s au simulateur linux"},{"location":"linux/#solutions","text":"Click me Aide \u00e9nigme 1 : ??? 9F Aide \u00e9nigme 2 : ??? B7 Aide \u00e9nigme 3 : ??? 72 Aide \u00e9nigme 4 : ??? A9 Aide \u00e9nigme 5 : ??? E7 Aide \u00e9nigme 6 : ??? C3","title":"Solutions"},{"location":"micropython-webserver/","text":"Utilisation de MicroPython et Webserver Pr\u00e9requis : firmware ESP32 flash\u00e9 avec le firmware MicroPython Contr\u00f4ler unse sortie source : https://randomnerdtutorials.com/esp32-esp8266-micropython-web-server/ Par d\u00e9faut, lorsque vous flasher le firmware MicroPython, un fichier boot.py est cr\u00e9\u00e9. Pour ce projet, vous aurez besoin d'un fichier boot.py et d'un fichier main.py. - Le fichier boot.py contient le code qui ne doit \u00eatre ex\u00e9cut\u00e9 qu'une seule fois au d\u00e9marrage. Il s'agit de l'importation des biblioth\u00e8ques, des identifiants r\u00e9seau, de l'instanciation des broches, de la connexion au r\u00e9seau et d'autres configurations. Le fichier main.py contient le code qui ex\u00e9cute le serveur web pour servir des fichiers et effectuer des t\u00e2ches en fonction des demandes re\u00e7ues par le client. Cr\u00e9ation du fichier boot.py Dans ce code : - Cr\u00e9e un client wifi (STA = Station) (on pourrait faire la m\u00eame chose en AP = Access Point) - Se connecte au wifi donn\u00e9 - Renvoie dans le terminal/console les informations du r\u00e9seau donn\u00e9es par le serveur DHCP (IP, Masque, Passerelle, DNS) - Configure les GPIO boot.py try: import usocket as socket except: import socket from machine import Pin import network import esp esp.osdebug(None) import gc gc.collect() ssid = 'REPLACE_WITH_YOUR_SSID' password = 'REPLACE_WITH_YOUR_PASSWORD' station = network.WLAN(network.STA_IF) station.active(True) station.connect(ssid, password) while station.isconnected() == False: pass print('Connection successful') print(station.ifconfig()) led = Pin(2, Pin.OUT) Retour dans la console Connection successful ('192.168.1.59', '255.255.255.0', '192.168.1.1', '192.168.1.1') Cr\u00e9ation du fichier main.py Dans ce code : - D\u00e9fini une fonction pour lire le statue des gpio et cr\u00e9e la page html - G\u00e9re les connections au serveur web main.py def web_page(): if led.value() == 1: gpio_state=\"ON\" else: gpio_state=\"OFF\" html =\"\"\"<html> <head> <title>ESP Web Server</title> </head> <body> <h1>ESP Web Server</h1> <p>GPIO state: <strong>\"\"\" + gpio_state + \"\"\"</strong></p> <p><a href=\"/?led=on\"><button class=\"button1\">ON</button></a></p> <p><a href=\"/?led=off\"><button class=\"button2\">OFF</button></a></p> </body> </html>\"\"\" return html s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind(('', 80)) s.listen(5) while True: conn, addr = s.accept() print('Got a connection from %s' % str(addr)) request = conn.recv(1024) request = str(request) print('Content = %s' % request) led_on = request.find('/?led=on') led_off = request.find('/?led=off') if led_on == 6: print('LED ON') led.value(1) if led_off == 6: print('LED OFF') led.value(0) response = web_page() conn.send('HTTP/1.1 200 OK\\n') conn.send('Content-Type: text/html\\n') conn.send('Connection: close\\n\\n') conn.sendall(response) conn.close()","title":"ESP32 GPIO Python Webserver"},{"location":"micropython-webserver/#utilisation-de-micropython-et-webserver","text":"Pr\u00e9requis : firmware ESP32 flash\u00e9 avec le firmware MicroPython","title":"Utilisation de MicroPython et Webserver"},{"location":"micropython-webserver/#controler-unse-sortie","text":"source : https://randomnerdtutorials.com/esp32-esp8266-micropython-web-server/ Par d\u00e9faut, lorsque vous flasher le firmware MicroPython, un fichier boot.py est cr\u00e9\u00e9. Pour ce projet, vous aurez besoin d'un fichier boot.py et d'un fichier main.py. - Le fichier boot.py contient le code qui ne doit \u00eatre ex\u00e9cut\u00e9 qu'une seule fois au d\u00e9marrage. Il s'agit de l'importation des biblioth\u00e8ques, des identifiants r\u00e9seau, de l'instanciation des broches, de la connexion au r\u00e9seau et d'autres configurations. Le fichier main.py contient le code qui ex\u00e9cute le serveur web pour servir des fichiers et effectuer des t\u00e2ches en fonction des demandes re\u00e7ues par le client.","title":"Contr\u00f4ler unse sortie"},{"location":"micropython-webserver/#creation-du-fichier-bootpy","text":"Dans ce code : - Cr\u00e9e un client wifi (STA = Station) (on pourrait faire la m\u00eame chose en AP = Access Point) - Se connecte au wifi donn\u00e9 - Renvoie dans le terminal/console les informations du r\u00e9seau donn\u00e9es par le serveur DHCP (IP, Masque, Passerelle, DNS) - Configure les GPIO boot.py try: import usocket as socket except: import socket from machine import Pin import network import esp esp.osdebug(None) import gc gc.collect() ssid = 'REPLACE_WITH_YOUR_SSID' password = 'REPLACE_WITH_YOUR_PASSWORD' station = network.WLAN(network.STA_IF) station.active(True) station.connect(ssid, password) while station.isconnected() == False: pass print('Connection successful') print(station.ifconfig()) led = Pin(2, Pin.OUT) Retour dans la console Connection successful ('192.168.1.59', '255.255.255.0', '192.168.1.1', '192.168.1.1')","title":"Cr\u00e9ation du fichier boot.py"},{"location":"micropython-webserver/#creation-du-fichier-mainpy","text":"Dans ce code : - D\u00e9fini une fonction pour lire le statue des gpio et cr\u00e9e la page html - G\u00e9re les connections au serveur web main.py def web_page(): if led.value() == 1: gpio_state=\"ON\" else: gpio_state=\"OFF\" html =\"\"\"<html> <head> <title>ESP Web Server</title> </head> <body> <h1>ESP Web Server</h1> <p>GPIO state: <strong>\"\"\" + gpio_state + \"\"\"</strong></p> <p><a href=\"/?led=on\"><button class=\"button1\">ON</button></a></p> <p><a href=\"/?led=off\"><button class=\"button2\">OFF</button></a></p> </body> </html>\"\"\" return html s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind(('', 80)) s.listen(5) while True: conn, addr = s.accept() print('Got a connection from %s' % str(addr)) request = conn.recv(1024) request = str(request) print('Content = %s' % request) led_on = request.find('/?led=on') led_off = request.find('/?led=off') if led_on == 6: print('LED ON') led.value(1) if led_off == 6: print('LED OFF') led.value(0) response = web_page() conn.send('HTTP/1.1 200 OK\\n') conn.send('Content-Type: text/html\\n') conn.send('Connection: close\\n\\n') conn.sendall(response) conn.close()","title":"Cr\u00e9ation du fichier main.py"},{"location":"micropython/","text":"Utilisation de MicroPython Pour comprendre : principe g\u00e9n\u00e9ral de l'utilisation de MicroPython Le principe g\u00e9n\u00e9ral est le suivant : on connecte la carte avec Micropython sur le port USB : un port s\u00e9rie lui est attribu\u00e9 : /dev/ttyACM0 par exemple sous Gnu/Linux avec un interpr\u00e9teur comme Thonny, on peut envoyer le code dans la carte. Pr\u00e9parer le mat\u00e9riel pour MicroPython source : https://www.aranacorp.com/fr/programmez-un-esp32-avec-micropython/ Les cartes Arduino et les cartes type ESP32/ESP8266, ont un firmware (mini-OS) permettant de charger du code depuis l'IDE de Arduino. Nous devons modifier ce firmware pour fonctionner en MicroPython. Pr\u00e9requis : Installer Python 3 (facultatif) Installer les esptool : pip install esptool Installer Thonny IDE (sous Linux version flatpak + r\u00e9cente ) Sous Linux : sudo usermod -a -G dialout your-username Nous allons flasher le firmware MicroPython avec Thonny IDE. La m\u00e9thode la plus simple pour installer et utiliser MicroPython sur ESP32 (et autre microcontr\u00f4leur) est d\u2019utiliser le logiciel Thonny IDE. En effet vous pouvez installer le firmware \u00e0 partir de l\u2019interface du logiciel et l\u2019utiliser pour d\u00e9velopper votre code et le t\u00e9l\u00e9verser sur la carte. Dans le logiciel, Thony IDE, s\u00e9lectionner le Menu : Ex\u00e9cuter puis Configurer l'interpr\u00e9teur... Cliquer sur Installer ou mettre \u00e0 jour MicroPython (esptool.) S\u00e9lectionner le bon port. Pour une carte Carte Espressif ESP32-WROOM-32E : MicroPython family : ESP32 Variant : Espressif ESP32 / VROOM Puis instaler, le firmware va se charger dans la carte. T\u00e9l\u00e9verser un programme Dans le logiciel, Thony IDE, s\u00e9lectionner le Menu : Ex\u00e9cuter puis Configurer l'interpr\u00e9teur... Choisir le bon port (exemple : /dev/ttyUSB0 ou c/dev/ttyACM0 ) Programme test from machine import Pin import time pin_led1 = Pin(2, mode=Pin.OUT) pin_led2 = Pin(5, mode=Pin.OUT) while True: pin_led1.on() time.sleep(1) pin_led1.off() time.sleep(1) pin_led2.on() time.sleep(1) pin_led2.off() time.sleep(1) Remettre le mat\u00e9riel pour Arduino IDE Dans le logiciel, Arduino IDE, s\u00e9lectionner le Menu : Tools puis Board -> esp32 -> ESP32 Dev Module Dans le Menu : Tools puis Programmer, s\u00e9lectionner Esptool Dans le Menu : Tools puis Burn Bootloader Programme test void setup() { pinMode(2, OUTPUT); pinMode(5, OUTPUT); } void loop() { digitalWrite(2, HIGH); delay(100); digitalWrite(2, LOW); delay(100); digitalWrite(5, HIGH); delay(100); digitalWrite(5, LOW); delay(100); }","title":"MicroPython"},{"location":"micropython/#utilisation-de-micropython","text":"Pour comprendre : principe g\u00e9n\u00e9ral de l'utilisation de MicroPython Le principe g\u00e9n\u00e9ral est le suivant : on connecte la carte avec Micropython sur le port USB : un port s\u00e9rie lui est attribu\u00e9 : /dev/ttyACM0 par exemple sous Gnu/Linux avec un interpr\u00e9teur comme Thonny, on peut envoyer le code dans la carte.","title":"Utilisation de MicroPython"},{"location":"micropython/#preparer-le-materiel-pour-micropython","text":"source : https://www.aranacorp.com/fr/programmez-un-esp32-avec-micropython/ Les cartes Arduino et les cartes type ESP32/ESP8266, ont un firmware (mini-OS) permettant de charger du code depuis l'IDE de Arduino. Nous devons modifier ce firmware pour fonctionner en MicroPython. Pr\u00e9requis : Installer Python 3 (facultatif) Installer les esptool : pip install esptool Installer Thonny IDE (sous Linux version flatpak + r\u00e9cente ) Sous Linux : sudo usermod -a -G dialout your-username Nous allons flasher le firmware MicroPython avec Thonny IDE. La m\u00e9thode la plus simple pour installer et utiliser MicroPython sur ESP32 (et autre microcontr\u00f4leur) est d\u2019utiliser le logiciel Thonny IDE. En effet vous pouvez installer le firmware \u00e0 partir de l\u2019interface du logiciel et l\u2019utiliser pour d\u00e9velopper votre code et le t\u00e9l\u00e9verser sur la carte. Dans le logiciel, Thony IDE, s\u00e9lectionner le Menu : Ex\u00e9cuter puis Configurer l'interpr\u00e9teur... Cliquer sur Installer ou mettre \u00e0 jour MicroPython (esptool.) S\u00e9lectionner le bon port. Pour une carte Carte Espressif ESP32-WROOM-32E : MicroPython family : ESP32 Variant : Espressif ESP32 / VROOM Puis instaler, le firmware va se charger dans la carte.","title":"Pr\u00e9parer le mat\u00e9riel pour MicroPython"},{"location":"micropython/#televerser-un-programme","text":"Dans le logiciel, Thony IDE, s\u00e9lectionner le Menu : Ex\u00e9cuter puis Configurer l'interpr\u00e9teur... Choisir le bon port (exemple : /dev/ttyUSB0 ou c/dev/ttyACM0 )","title":"T\u00e9l\u00e9verser un programme"},{"location":"micropython/#programme-test","text":"from machine import Pin import time pin_led1 = Pin(2, mode=Pin.OUT) pin_led2 = Pin(5, mode=Pin.OUT) while True: pin_led1.on() time.sleep(1) pin_led1.off() time.sleep(1) pin_led2.on() time.sleep(1) pin_led2.off() time.sleep(1)","title":"Programme test"},{"location":"micropython/#remettre-le-materiel-pour-arduino-ide","text":"Dans le logiciel, Arduino IDE, s\u00e9lectionner le Menu : Tools puis Board -> esp32 -> ESP32 Dev Module Dans le Menu : Tools puis Programmer, s\u00e9lectionner Esptool Dans le Menu : Tools puis Burn Bootloader","title":"Remettre le mat\u00e9riel pour Arduino IDE"},{"location":"micropython/#programme-test_1","text":"void setup() { pinMode(2, OUTPUT); pinMode(5, OUTPUT); } void loop() { digitalWrite(2, HIGH); delay(100); digitalWrite(2, LOW); delay(100); digitalWrite(5, HIGH); delay(100); digitalWrite(5, LOW); delay(100); }","title":"Programme test"},{"location":"proxmox/","text":"Utilisation de Proxmox Acc\u00e8s \u00e0 un cluster Un cluster dans Proxmox est un regroupement artificiel de serveurs qui permet la gestion centralis\u00e9e de ces serveurs et la mise en place \u00e9ventuelle d'un syst\u00e8me de haute disponibilit\u00e9. Il se compose de noeuds , qui sont des serveurs individuels au sein du cluster . La haute disponibilit\u00e9 (HA) garantit un service continu aux utilisateurs m\u00eame en cas de d\u00e9faillance mat\u00e9rielle. Un cluster dans Proxmox permet des fonctionnalit\u00e9s telles que la migration directe des machines virtuelles, garantissant une interruption minimale du service. Sur la capture on peut voir le cluster/datacenter est compos\u00e9 de 3 serveurs/noeuds Acc\u00e8s au cluster : https://193.49.248.71:10023 ou https://192.168.221.253:10023 depuis l'int\u00e9rieur du lyc\u00e9e) login : root password : E * 2023 realm : Linux PAM Acc\u00e8s \u00e0 une VM sous Proxmox Cr\u00e9er \u00e0 une VM sous Proxmox Attention \u00e0 ne pas d\u00e9passer les valeurs max : CPU RAM * DD (si disponible utiliser l'espace 'tank' (plus grand espace en RAIDZ) !!! Compl\u00e9ter les \"notes\" dans vos VM pour que tout le monde y ait acc\u00e8s. !!! Installation par r\u00e9seau Exemple : installation de Debian Pr\u00e9paration installation par ISO soit : uploader l'ISO soit : t\u00e9l\u00e9charger depuis un lien les ISO sont stock\u00e9es dans le disque 'local' des serveurs/noeuds Intallation par ISO Exemple : installation de Fedora Supprimer une VM Cloner une VM","title":"Proxmox"},{"location":"proxmox/#utilisation-de-proxmox","text":"","title":"Utilisation de Proxmox"},{"location":"proxmox/#acces-a-un-cluster","text":"Un cluster dans Proxmox est un regroupement artificiel de serveurs qui permet la gestion centralis\u00e9e de ces serveurs et la mise en place \u00e9ventuelle d'un syst\u00e8me de haute disponibilit\u00e9. Il se compose de noeuds , qui sont des serveurs individuels au sein du cluster . La haute disponibilit\u00e9 (HA) garantit un service continu aux utilisateurs m\u00eame en cas de d\u00e9faillance mat\u00e9rielle. Un cluster dans Proxmox permet des fonctionnalit\u00e9s telles que la migration directe des machines virtuelles, garantissant une interruption minimale du service. Sur la capture on peut voir le cluster/datacenter est compos\u00e9 de 3 serveurs/noeuds Acc\u00e8s au cluster : https://193.49.248.71:10023 ou https://192.168.221.253:10023 depuis l'int\u00e9rieur du lyc\u00e9e) login : root password : E * 2023 realm : Linux PAM","title":"Acc\u00e8s \u00e0 un cluster"},{"location":"proxmox/#acces-a-une-vm-sous-proxmox","text":"","title":"Acc\u00e8s \u00e0 une VM sous Proxmox"},{"location":"proxmox/#creer-a-une-vm-sous-proxmox","text":"Attention \u00e0 ne pas d\u00e9passer les valeurs max : CPU RAM * DD (si disponible utiliser l'espace 'tank' (plus grand espace en RAIDZ) !!! Compl\u00e9ter les \"notes\" dans vos VM pour que tout le monde y ait acc\u00e8s. !!!","title":"Cr\u00e9er \u00e0 une VM sous Proxmox"},{"location":"proxmox/#installation-par-reseau","text":"Exemple : installation de Debian","title":"Installation par r\u00e9seau"},{"location":"proxmox/#preparation-installation-par-iso","text":"soit : uploader l'ISO soit : t\u00e9l\u00e9charger depuis un lien les ISO sont stock\u00e9es dans le disque 'local' des serveurs/noeuds","title":"Pr\u00e9paration installation par ISO"},{"location":"proxmox/#intallation-par-iso","text":"Exemple : installation de Fedora","title":"Intallation par ISO"},{"location":"proxmox/#supprimer-une-vm","text":"","title":"Supprimer une VM"},{"location":"proxmox/#cloner-une-vm","text":"","title":"Cloner une VM"},{"location":"read_temp_dht11_c/","text":"Utilisation de Arduino IDE, C++, ESP32 et un capteur DHT11 Pr\u00e9requis : firmware ESP32 flash\u00e9 avec le firmware Arduino IDE Lecture simple du capteur source : https://www.upesy.fr/blogs/tutorials/dht11-humidity-temperature-sensor-with-arduino-code-on-esp32-board Le capteur DHT11 est tr\u00e8s populaire parmi les makers et les adeptes du DIY. Il est, en effet, si pris\u00e9 qu\u2019il est inclus par d\u00e9faut dans MicroPython. Son prix avantageux et sa simplicit\u00e9 d\u2019utilisation en sont les principales raisons. Correspondance des broches : Module DHT11 ESP32 1 - GND GND 2 - DATA GPIO 17 3 - Vcc 3,3V Attention : Selon votre ESP32, la GPIO 17 n'est pas plac\u00e9e au m\u00eame endroit. ESP32. Attention : Si le module ne comporte pas de r\u00e9sistance de pullup, il faut en ajouter une entre 4.7k\u03a9 (ou 10k\u03a9) entre les broches 3V3 et le signal (GPIO17 ). Attention : V\u00e9rifier que vous alimentez bien le module en 3.3V et non 5V pour avoir un signal de donn\u00e9es de 3.3V \u00e9galement. Mesurer la temp\u00e9rature et l\u2019humidit\u00e9 ambiante du DHT11 Puisque le DHT11 utilise un protocole propri\u00e9taire, il est indispensable d\u2019utiliser une librairie pour communiquer facilement avec le capteur. Je vous conseille d\u2019utiliser la librairie DHT Sensor d\u2019Adafruit qui fonctionne correctement sur l\u2019ESP32 . Dans le gestionnaire de biblioth\u00e8que (Library Manager), rechercher et installer (Install ALL) \" DHT sensor library \" de Adafruit. Une fois que la librairie est install\u00e9e on utilise le code suivant qui r\u00e9cup\u00e8re la temp\u00e9rature et le taux d\u2019humidit\u00e9 du DHT11. #include \"DHT.h\" #define DHTPIN 17 #define DHTTYPE DHT11 //DHTTYPE = DHT11, mais il existe aussi le DHT22 et 21 DHT dht(DHTPIN, DHTTYPE); // constructeur pour d\u00e9clarer notre capteur void setup() { Serial.begin(115200); dht.begin(); } void loop() { delay(1000); // Le DHT11 renvoie au maximum une mesure toute les 1s float h = dht.readHumidity(); //Lis le taux d'humidite en % float t = dht.readTemperature(); //Lis la temp\u00e9rature en degr\u00e9 celsius Serial.print(\"Humidite: \"); Serial.print(h); Serial.print(\"% Temperature: \"); Serial.print(t); Serial.println(\"\u00b0C, \"); // Transmet les mesures re\u00e7ues dans le moniteur s\u00e9rie } Retour dans la console/monitor Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F Lecture du capteur et envoie sur une page web source : https://randomnerdtutorials.com/esp32-dht11-dht22-temperature-humidity-web-server-arduino-ide/ #include <WiFi.h> #include <WebServer.h> #include \"DHT.h\" #define DHTTYPE DHT11 // DHT 11 /*Put your SSID & Password*/ const char* ssid = \"YourNetworkName\"; // Enter SSID here const char* password = \"YourPassword\"; //Enter Password here WebServer server(80); // DHT Sensor uint8_t DHTPin = 17; // Initialize DHT sensor. DHT dht(DHTPin, DHTTYPE); float Temperature; float Humidity; void setup() { Serial.begin(115200); delay(100); pinMode(DHTPin, INPUT); dht.begin(); Serial.println(\"Connecting to \"); Serial.println(ssid); //connect to your local wi-fi network WiFi.begin(ssid, password); //check wi-fi is connected to wi-fi network while (WiFi.status() != WL_CONNECTED) { delay(1000); Serial.print(\".\"); } Serial.println(\"\"); Serial.println(\"WiFi connected..!\"); Serial.print(\"Got IP: \"); Serial.println(WiFi.localIP()); server.on(\"/\", handle_OnConnect); server.onNotFound(handle_NotFound); server.begin(); Serial.println(\"HTTP server started\"); } void loop() { server.handleClient(); } void handle_OnConnect() { Temperature = dht.readTemperature(); // Gets the values of the temperature Humidity = dht.readHumidity(); // Gets the values of the humidity server.send(200, \"text/html\", SendHTML(Temperature,Humidity)); } void handle_NotFound(){ server.send(404, \"text/plain\", \"Not found\"); } String SendHTML(float Temperaturestat,float Humiditystat){ String ptr = \"<!DOCTYPE html> <html>\\n\"; ptr +=\"<head>\\n\"; ptr +=\"<title>ESP32 Weather Report</title>\\n\"; ptr +=\"</head>\\n\"; ptr +=\"<body>\\n\"; ptr +=\"<h1>ESP32 Weather Report</h1>\\n\"; ptr +=\"<p>Temperature: \"; ptr +=(int)Temperaturestat; ptr +=\"&deg;C</p>\"; ptr +=\"<p>Humidity: \"; ptr +=(int)Humiditystat; ptr +=\"%</p>\"; ptr +=\"</body>\\n\"; ptr +=\"</html>\\n\"; return ptr; }","title":"ESP32 Lire DHT11 C++"},{"location":"read_temp_dht11_c/#utilisation-de-arduino-ide-c-esp32-et-un-capteur-dht11","text":"Pr\u00e9requis : firmware ESP32 flash\u00e9 avec le firmware Arduino IDE","title":"Utilisation de Arduino IDE, C++, ESP32 et un capteur DHT11"},{"location":"read_temp_dht11_c/#lecture-simple-du-capteur","text":"source : https://www.upesy.fr/blogs/tutorials/dht11-humidity-temperature-sensor-with-arduino-code-on-esp32-board Le capteur DHT11 est tr\u00e8s populaire parmi les makers et les adeptes du DIY. Il est, en effet, si pris\u00e9 qu\u2019il est inclus par d\u00e9faut dans MicroPython. Son prix avantageux et sa simplicit\u00e9 d\u2019utilisation en sont les principales raisons.","title":"Lecture simple du capteur"},{"location":"read_temp_dht11_c/#correspondance-des-broches","text":"Module DHT11 ESP32 1 - GND GND 2 - DATA GPIO 17 3 - Vcc 3,3V Attention : Selon votre ESP32, la GPIO 17 n'est pas plac\u00e9e au m\u00eame endroit. ESP32. Attention : Si le module ne comporte pas de r\u00e9sistance de pullup, il faut en ajouter une entre 4.7k\u03a9 (ou 10k\u03a9) entre les broches 3V3 et le signal (GPIO17 ). Attention : V\u00e9rifier que vous alimentez bien le module en 3.3V et non 5V pour avoir un signal de donn\u00e9es de 3.3V \u00e9galement.","title":"Correspondance des broches :"},{"location":"read_temp_dht11_c/#mesurer-la-temperature-et-lhumidite-ambiante-du-dht11","text":"Puisque le DHT11 utilise un protocole propri\u00e9taire, il est indispensable d\u2019utiliser une librairie pour communiquer facilement avec le capteur. Je vous conseille d\u2019utiliser la librairie DHT Sensor d\u2019Adafruit qui fonctionne correctement sur l\u2019ESP32 . Dans le gestionnaire de biblioth\u00e8que (Library Manager), rechercher et installer (Install ALL) \" DHT sensor library \" de Adafruit. Une fois que la librairie est install\u00e9e on utilise le code suivant qui r\u00e9cup\u00e8re la temp\u00e9rature et le taux d\u2019humidit\u00e9 du DHT11. #include \"DHT.h\" #define DHTPIN 17 #define DHTTYPE DHT11 //DHTTYPE = DHT11, mais il existe aussi le DHT22 et 21 DHT dht(DHTPIN, DHTTYPE); // constructeur pour d\u00e9clarer notre capteur void setup() { Serial.begin(115200); dht.begin(); } void loop() { delay(1000); // Le DHT11 renvoie au maximum une mesure toute les 1s float h = dht.readHumidity(); //Lis le taux d'humidite en % float t = dht.readTemperature(); //Lis la temp\u00e9rature en degr\u00e9 celsius Serial.print(\"Humidite: \"); Serial.print(h); Serial.print(\"% Temperature: \"); Serial.print(t); Serial.println(\"\u00b0C, \"); // Transmet les mesures re\u00e7ues dans le moniteur s\u00e9rie } Retour dans la console/monitor Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F Humidite: 49.00% Temperature: 23.00\u00b0C, 73.40\u00b0F","title":"Mesurer la temp\u00e9rature et l\u2019humidit\u00e9 ambiante du DHT11"},{"location":"read_temp_dht11_c/#lecture-du-capteur-et-envoie-sur-une-page-web","text":"source : https://randomnerdtutorials.com/esp32-dht11-dht22-temperature-humidity-web-server-arduino-ide/ #include <WiFi.h> #include <WebServer.h> #include \"DHT.h\" #define DHTTYPE DHT11 // DHT 11 /*Put your SSID & Password*/ const char* ssid = \"YourNetworkName\"; // Enter SSID here const char* password = \"YourPassword\"; //Enter Password here WebServer server(80); // DHT Sensor uint8_t DHTPin = 17; // Initialize DHT sensor. DHT dht(DHTPin, DHTTYPE); float Temperature; float Humidity; void setup() { Serial.begin(115200); delay(100); pinMode(DHTPin, INPUT); dht.begin(); Serial.println(\"Connecting to \"); Serial.println(ssid); //connect to your local wi-fi network WiFi.begin(ssid, password); //check wi-fi is connected to wi-fi network while (WiFi.status() != WL_CONNECTED) { delay(1000); Serial.print(\".\"); } Serial.println(\"\"); Serial.println(\"WiFi connected..!\"); Serial.print(\"Got IP: \"); Serial.println(WiFi.localIP()); server.on(\"/\", handle_OnConnect); server.onNotFound(handle_NotFound); server.begin(); Serial.println(\"HTTP server started\"); } void loop() { server.handleClient(); } void handle_OnConnect() { Temperature = dht.readTemperature(); // Gets the values of the temperature Humidity = dht.readHumidity(); // Gets the values of the humidity server.send(200, \"text/html\", SendHTML(Temperature,Humidity)); } void handle_NotFound(){ server.send(404, \"text/plain\", \"Not found\"); } String SendHTML(float Temperaturestat,float Humiditystat){ String ptr = \"<!DOCTYPE html> <html>\\n\"; ptr +=\"<head>\\n\"; ptr +=\"<title>ESP32 Weather Report</title>\\n\"; ptr +=\"</head>\\n\"; ptr +=\"<body>\\n\"; ptr +=\"<h1>ESP32 Weather Report</h1>\\n\"; ptr +=\"<p>Temperature: \"; ptr +=(int)Temperaturestat; ptr +=\"&deg;C</p>\"; ptr +=\"<p>Humidity: \"; ptr +=(int)Humiditystat; ptr +=\"%</p>\"; ptr +=\"</body>\\n\"; ptr +=\"</html>\\n\"; return ptr; }","title":"Lecture du capteur et envoie sur une page web"},{"location":"read_temp_dht11_python/","text":"Utilisation de MicroPython, ESP32 et un capteur DHT11 Pr\u00e9requis : firmware ESP32 flash\u00e9 avec le firmware MicroPython Lecture simple du capteur source : https://randomnerdtutorials.com/esp32-esp8266-dht11-dht22-micropython-temperature-humidity-sensor/ Le capteur DHT11 est tr\u00e8s populaire parmi les makers et les adeptes du DIY. Il est, en effet, si pris\u00e9 qu\u2019il est inclus par d\u00e9faut dans MicroPython. Son prix avantageux et sa simplicit\u00e9 d\u2019utilisation en sont les principales raisons. Correspondance des broches : Module DHT11 ESP32 1 - GND GND 2 - DATA GPIO 17 3 - Vcc 3,3V Attention : Selon votre ESP32, la GPIO 17 n'est pas plac\u00e9e au m\u00eame endroit. ESP32. Attention : Si le module ne comporte pas de r\u00e9sistance de pullup, il faut en ajouter une entre 4.7k\u03a9 (ou 10k\u03a9) entre les broches 3V3 et le signal (GPIO17 ). Mesurer la temp\u00e9rature et l\u2019humidit\u00e9 ambiante du DHT11 avec MicroPython Puisque le DHT11 utilise un protocole propri\u00e9taire, il est n\u00e9cessaire d\u2019utiliser une biblioth\u00e8que pour communiquer facilement avec le capteur. Heureusement, elle est incluse par d\u00e9faut dans MicroPython, donc il n\u2019y a pas besoin de t\u00e9l\u00e9charger une biblioth\u00e8que externe suppl\u00e9mentaire. Le code \u00e0 utiliser est tr\u00e8s simple : il suffit d\u2019instancier un objet dht avec un num\u00e9ro de pin et d\u2019utiliser la fonction capteur.measure() . On peut voir d'apr\u00e8s le code la sortie GPIO est bien 17. Le r\u00e9sultat est affich\u00e9 dans le terminal de l\u2019IDE Thonny. La temp\u00e9rature est exprim\u00e9e en degr\u00e9s Celsius, tandis que l\u2019humidit\u00e9 est exprim\u00e9e en pourcentage. from machine import Pin from time import sleep import dht sensor = dht.DHT11(Pin(17)) while True: sleep(2) sensor.measure() temp = sensor.temperature() hum = sensor.humidity() print('Temperature: %3.1f C' %temp) print('Humidity: %3.1f %%' %hum) Lecture du capteur et envoie sur une page web source : https://randomnerdtutorials.com/esp32-esp8266-micropython-web-server/ https://randomnerdtutorials.com/micropython-esp32-esp8266-dht11-dht22-web-server/ Par d\u00e9faut, lorsque vous flasher le firmware MicroPython, un fichier boot.py est cr\u00e9\u00e9. Pour ce projet, vous aurez besoin d'un fichier boot.py et d'un fichier main.py. - Le fichier boot.py contient le code qui ne doit \u00eatre ex\u00e9cut\u00e9 qu'une seule fois au d\u00e9marrage. Il s'agit de l'importation des biblioth\u00e8ques, des identifiants r\u00e9seau, de l'instanciation des broches, de la connexion au r\u00e9seau et d'autres configurations. Le fichier main.py contient le code qui ex\u00e9cute le serveur web pour servir des fichiers et effectuer des t\u00e2ches en fonction des demandes re\u00e7ues par le client. Cr\u00e9ation du fichier boot.py Dans ce code : - Cr\u00e9e un client wifi (STA = Station) (on pourrait faire la m\u00eame chose en AP = Access Point) - Se connecte au wifi donn\u00e9 - Renvoie dans le terminal/console les informations du r\u00e9seau donn\u00e9es par le serveur DHCP (IP, Masque, Passerelle, DNS) - Configure les GPIO - GPIO 17 : pour le capteur DHT11 boot.py try: import usocket as socket except: import socket import network from machine import Pin import dht import esp esp.osdebug(None) import gc gc.collect() ssid = 'REPLACE_WITH_YOUR_SSID' password = 'REPLACE_WITH_YOUR_PASSWORD' station = network.WLAN(network.STA_IF) station.active(True) station.connect(ssid, password) while station.isconnected() == False: pass print('Connection successful') print(station.ifconfig()) sensor = dht.DHT11(Pin(17)) Retour dans la console Connection successful ('192.168.1.59', '255.255.255.0', '192.168.1.1', '192.168.1.1') Cr\u00e9ation du fichier main.py Dans ce code : - D\u00e9fini une fonction pour lire le capteur - D\u00e9fini une fonction pour cr\u00e9er la page html - G\u00e9re les connections au serveur web main.py def read_sensor(): global temp, hum temp = hum = 0.0 try: sensor.measure() temp = f'{sensor.temperature():3.2f}' hum = f'{sensor.humidity():3.1f}' return 0 except OSError as e: return('Failed to read sensor.') def web_page(): html = \"\"\"<!DOCTYPE HTML><html> <head> </head> <body> <h2>ESP DHT Server</h2> <p>Temp: <strong>\"\"\" + str(temp) + \"\"\" &deg;C</strong></p> <p>Hum: <strong>\"\"\" + str(hum) + \"\"\" %</strong></p> </body> </html>\"\"\" return html s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind(('', 80)) s.listen(5) while True: conn, addr = s.accept() print('Got a connection from %s' % str(addr)) request = conn.recv(1024) print('Content = %s' % str(request)) mes = read_sensor() response = web_page() conn.send('HTTP/1.1 200 OK\\n') conn.send('Content-Type: text/html\\n') conn.send('Connection: close\\n\\n') conn.sendall(response) conn.close()","title":"ESP32 Lire DHT11 Python"},{"location":"read_temp_dht11_python/#utilisation-de-micropython-esp32-et-un-capteur-dht11","text":"Pr\u00e9requis : firmware ESP32 flash\u00e9 avec le firmware MicroPython","title":"Utilisation de MicroPython, ESP32 et un capteur DHT11"},{"location":"read_temp_dht11_python/#lecture-simple-du-capteur","text":"source : https://randomnerdtutorials.com/esp32-esp8266-dht11-dht22-micropython-temperature-humidity-sensor/ Le capteur DHT11 est tr\u00e8s populaire parmi les makers et les adeptes du DIY. Il est, en effet, si pris\u00e9 qu\u2019il est inclus par d\u00e9faut dans MicroPython. Son prix avantageux et sa simplicit\u00e9 d\u2019utilisation en sont les principales raisons.","title":"Lecture simple du capteur"},{"location":"read_temp_dht11_python/#correspondance-des-broches","text":"Module DHT11 ESP32 1 - GND GND 2 - DATA GPIO 17 3 - Vcc 3,3V Attention : Selon votre ESP32, la GPIO 17 n'est pas plac\u00e9e au m\u00eame endroit. ESP32. Attention : Si le module ne comporte pas de r\u00e9sistance de pullup, il faut en ajouter une entre 4.7k\u03a9 (ou 10k\u03a9) entre les broches 3V3 et le signal (GPIO17 ).","title":"Correspondance des broches :"},{"location":"read_temp_dht11_python/#mesurer-la-temperature-et-lhumidite-ambiante-du-dht11-avec-micropython","text":"Puisque le DHT11 utilise un protocole propri\u00e9taire, il est n\u00e9cessaire d\u2019utiliser une biblioth\u00e8que pour communiquer facilement avec le capteur. Heureusement, elle est incluse par d\u00e9faut dans MicroPython, donc il n\u2019y a pas besoin de t\u00e9l\u00e9charger une biblioth\u00e8que externe suppl\u00e9mentaire. Le code \u00e0 utiliser est tr\u00e8s simple : il suffit d\u2019instancier un objet dht avec un num\u00e9ro de pin et d\u2019utiliser la fonction capteur.measure() . On peut voir d'apr\u00e8s le code la sortie GPIO est bien 17. Le r\u00e9sultat est affich\u00e9 dans le terminal de l\u2019IDE Thonny. La temp\u00e9rature est exprim\u00e9e en degr\u00e9s Celsius, tandis que l\u2019humidit\u00e9 est exprim\u00e9e en pourcentage. from machine import Pin from time import sleep import dht sensor = dht.DHT11(Pin(17)) while True: sleep(2) sensor.measure() temp = sensor.temperature() hum = sensor.humidity() print('Temperature: %3.1f C' %temp) print('Humidity: %3.1f %%' %hum)","title":"Mesurer la temp\u00e9rature et l\u2019humidit\u00e9 ambiante du DHT11 avec MicroPython"},{"location":"read_temp_dht11_python/#lecture-du-capteur-et-envoie-sur-une-page-web","text":"source : https://randomnerdtutorials.com/esp32-esp8266-micropython-web-server/ https://randomnerdtutorials.com/micropython-esp32-esp8266-dht11-dht22-web-server/ Par d\u00e9faut, lorsque vous flasher le firmware MicroPython, un fichier boot.py est cr\u00e9\u00e9. Pour ce projet, vous aurez besoin d'un fichier boot.py et d'un fichier main.py. - Le fichier boot.py contient le code qui ne doit \u00eatre ex\u00e9cut\u00e9 qu'une seule fois au d\u00e9marrage. Il s'agit de l'importation des biblioth\u00e8ques, des identifiants r\u00e9seau, de l'instanciation des broches, de la connexion au r\u00e9seau et d'autres configurations. Le fichier main.py contient le code qui ex\u00e9cute le serveur web pour servir des fichiers et effectuer des t\u00e2ches en fonction des demandes re\u00e7ues par le client.","title":"Lecture du capteur et envoie sur une page web"},{"location":"read_temp_dht11_python/#creation-du-fichier-bootpy","text":"Dans ce code : - Cr\u00e9e un client wifi (STA = Station) (on pourrait faire la m\u00eame chose en AP = Access Point) - Se connecte au wifi donn\u00e9 - Renvoie dans le terminal/console les informations du r\u00e9seau donn\u00e9es par le serveur DHCP (IP, Masque, Passerelle, DNS) - Configure les GPIO - GPIO 17 : pour le capteur DHT11 boot.py try: import usocket as socket except: import socket import network from machine import Pin import dht import esp esp.osdebug(None) import gc gc.collect() ssid = 'REPLACE_WITH_YOUR_SSID' password = 'REPLACE_WITH_YOUR_PASSWORD' station = network.WLAN(network.STA_IF) station.active(True) station.connect(ssid, password) while station.isconnected() == False: pass print('Connection successful') print(station.ifconfig()) sensor = dht.DHT11(Pin(17)) Retour dans la console Connection successful ('192.168.1.59', '255.255.255.0', '192.168.1.1', '192.168.1.1')","title":"Cr\u00e9ation du fichier boot.py"},{"location":"read_temp_dht11_python/#creation-du-fichier-mainpy","text":"Dans ce code : - D\u00e9fini une fonction pour lire le capteur - D\u00e9fini une fonction pour cr\u00e9er la page html - G\u00e9re les connections au serveur web main.py def read_sensor(): global temp, hum temp = hum = 0.0 try: sensor.measure() temp = f'{sensor.temperature():3.2f}' hum = f'{sensor.humidity():3.1f}' return 0 except OSError as e: return('Failed to read sensor.') def web_page(): html = \"\"\"<!DOCTYPE HTML><html> <head> </head> <body> <h2>ESP DHT Server</h2> <p>Temp: <strong>\"\"\" + str(temp) + \"\"\" &deg;C</strong></p> <p>Hum: <strong>\"\"\" + str(hum) + \"\"\" %</strong></p> </body> </html>\"\"\" return html s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind(('', 80)) s.listen(5) while True: conn, addr = s.accept() print('Got a connection from %s' % str(addr)) request = conn.recv(1024) print('Content = %s' % str(request)) mes = read_sensor() response = web_page() conn.send('HTTP/1.1 200 OK\\n') conn.send('Content-Type: text/html\\n') conn.send('Connection: close\\n\\n') conn.sendall(response) conn.close()","title":"Cr\u00e9ation du fichier main.py"}]}